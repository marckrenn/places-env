name: Publish to PyPI

on:
  push:
    branches:
      - main

jobs:
  lint:
    uses: ./.github/workflows/lint.yaml

  test:
    needs: lint
    uses: ./.github/workflows/test.yaml

  publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Cache uv dependencies
        uses: actions/cache@v3
        with:
          path: ~/.uv
          key: uv-dependencies-${{ runner.os }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            uv-dependencies-${{ runner.os }}-

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Set up Python
        run: uv python install

      - name: Sync dependencies
        run: uv sync --all-extras --dev

      - name: Build and Publish to PyPI
        run: |
          uv run python -m build
          uv run twine upload dist/* \
            --api-token ${{ secrets.PYPI_API_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ github.run_number }}
          release_name: "Release v${{ github.run_number }}"
          body: "Published to PyPI and GitHub Release"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}